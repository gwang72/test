# -*- coding: utf-8 -*-
"""
Created on Fri Jul 14 10:59:27 2017

@author: pfermat
"""

import math
import numpy as np
np.set_printoptions(threshold=np.inf)

P = [ [0,0.8,0.71,0.83,0.68,0,0.89,0.78,0.56,1,0.62,0.57,1,0.88,1],
[0,0.59,0.39,0.5,0.64,0,0.83,0.54,0.48,1,0.76,0.5,0,0.8,1],
[0,0.69,0.78,0.66,0.63,0,0.88,0.65,0.59,1,0.79,0.54,0,0.75,1],
[0,0.88,0.78,0.9,0.41,0,0.94,0.74,0.83,1,0.76,0.69,0,0.91,1],
[0,0.76,0.78,0.69,0.52,0,0.96,0.7,0.62,1,0.92,0.6,1,0.78,1],
[0,0.78,0.64,0.69,0.55,0,0.92,0.65,0.55,1,0.55,0.51,0,0.78,1],
[0,0.74,0.92,0.52,0.64,0,0.95,0.7,0.56,1,0.93,0.56,0,0.78,1],
[0,0.86,0.93,0.86,0.66,0,0.96,0.91,0.64,1,0.9,0.69,1,0.89,1],
[0,0.9,0.98,0.91,0.36,0,0.97,0.83,0.86,1,0.76,0.72,1,0.88,1],
[0,0.8,0.85,0.83,0.48,0,0.95,0.78,0.81,1,0.93,0.68,1,0.85,1],
[0,0.84,0.74,0.76,0.36,0,0.97,0.74,0.79,1,0.97,0.7,1,0.87,1],
[0,0.81,0.82,0.83,0.64,0,0.96,0.8,0.5,1,0.96,0.67,1,0.88,1],
[0,0.87,0.8,0.74,0.68,0,0.94,0.84,1,1,0.76,0.72,1,0.86,1],
[0,0.71,0.71,0.69,0.41,0,0.9,0.69,0.71,1,0.76,0.56,1,0.78,1],
[0,0.64,0.59,0.71,0.41,0,0.77,0.52,0.56,1,0.55,0.5,1,0.78,0],
[0,0.96,0.85,0.83,0.73,0,1,0.82,0.76,1,0.79,0.65,0,0.84,1],
[0,0.88,0.59,0.64,0.68,0,0.93,0.67,0.55,1,0.79,0.65,1,0.83,1],
[1,0.85,0.81,0.81,0.68,0,0.97,0.91,0.71,1,0.93,0.86,1,0.95,1],
[0,0.61,0.46,0.5,0.61,0,0.84,0.54,0.45,1,0.79,0.48,0,0.76,1],
[0,0.8,0.64,0.79,0.36,0,0.9,0.65,0.52,1,0.74,0.56,1,0.82,1],
[0,0.94,0.97,0.81,0.68,0,0.97,0.92,0.62,1,0.76,0.7,1,0.91,1],
[0,0.85,0.78,0.83,0.64,0,0.89,0.77,0.67,1,0.76,0.68,1,0.9,0],
[0,0.71,0.57,0.52,0.61,0,0.87,0.63,0.33,1,0.76,0.56,1,0.83,1],
[0,0.74,0.57,0.72,0.77,0,0.9,0.69,0.38,1,0.79,0.56,1,0.79,1],
[0,0.76,0.71,0.69,0.59,0,0.9,0.67,0.67,1,0.93,0.63,0,0.85,1],
[0,0.93,0.68,0.69,0.59,0,0.94,0.74,1,1,0.66,0.71,0,0.9,1],
[1,0.88,0.71,0.78,0.77,0,0.96,0.85,0.62,1,0.93,0.88,1,0.95,1],
[0,0.94,0.93,0.91,0.68,0,1,0.97,0.81,1,0.93,0.76,1,0.95,1],
[0,0.78,0.69,0.74,0.77,0,0.91,0.8,0.69,1,0.76,0.59,1,0.82,1],
[0,0.94,0.97,0.91,1,1,1,1,0.81,0,0.93,0.74,1,0.86,1],
[1,0.67,0.56,0.79,0.27,0,0.87,0.56,0.5,1,0.76,0.71,1,0.81,1],
[0,0.89,0.93,0.91,0.55,0,0.99,0.84,0.76,1,0.59,0.62,1,0.78,1],
[0,0.72,0.71,0.52,0.36,0,0.95,0.6,0.43,1,0.79,0.5,1,0.73,1],
[0,0.83,0.74,0.83,0.55,0,0.92,0.77,0.59,1,0.73,0.63,1,0.87,1],
[1,0.9,0.93,1,0.73,0,0.97,0.97,0.69,1,0.93,0.89,1,0.99,1],
[0,0.7,0.73,0.91,0.55,0,0.9,0.8,0.69,0,0.62,0.48,1,0.83,1],
[0,0.85,0.85,0.83,0.68,1,0.99,0.87,0.79,1,0.93,0.8,1,0.89,1],
[0,0.73,0.69,0.6,0.36,0,0.87,0.6,0.83,1,0.48,0.57,1,0.8,1],
[1,0.79,0.91,0.93,0.55,0,0.96,0.83,0.48,1,1,0.79,1,0.87,1],
[0,0.74,0.73,0.81,0.73,0,0.86,0.79,0.45,1,0.76,0.66,1,0.91,0],
[0,0.86,0.88,0.81,0.68,0,0.96,0.9,0.81,1,0.93,0.66,1,0.87,1],
[0,0.82,0.71,0.83,0.55,0,0.92,0.81,0.81,1,0.83,0.71,1,0.91,1],
[0,0.79,0.64,0.76,0.63,0,0.93,0.63,0.48,1,0.83,0.56,0,0.75,1],
[0,0.98,0.92,0.83,0.55,0,1,0.84,0.81,1,0.76,0.7,1,0.88,1],
[1,0.73,0.51,0.85,0.36,1,0.93,0.56,0.5,0,0.81,0.65,1,0.78,1],
[0,0.85,0.92,0.83,0.68,0,0.98,0.88,0.74,1,0.93,0.76,1,0.9,1],
[0,0.84,0.66,0.78,0.55,0,0.9,0.66,0.56,1,0.76,0.6,0,0.83,1],
[0,0.82,0.78,0.69,0.64,0,0.89,0.74,0.62,1,0.93,0.67,1,0.9,0],
[0,0.83,0.98,0.9,0.77,1,1,0.97,0.83,1,0.6,0.72,1,0.81,1],
[0,0.94,0.97,0.91,0.86,0,0.99,1,0.86,1,0.79,0.76,1,0.92,1],
[0,0.81,0.98,0.91,0.55,0,0.94,0.87,0.56,1,0.93,0.64,1,0.9,1],
[0,0.69,0.83,0.69,0.55,0,0.92,0.73,0.36,1,0.62,0.5,1,0.78,1],
[0,0.82,0.73,0.81,0.64,0,0.87,0.73,0.56,1,0.93,0.71,1,0.94,0],
[0,0.93,0.86,0.91,0.68,0,0.99,0.95,0.81,1,0.76,0.73,1,0.93,1],
[0,0.74,0.78,0.79,0.36,0,0.88,0.71,0.62,1,0.76,0.55,1,0.84,1] ]

a = [-1.0, -1.1334945169008082, -0.4392114340875163, -0.13813810742032284, -0.7749072210462419, -0.42023052244847725, -1.2267645642711673, 1.2615043314629721, -1.1446569569598182, -0.6087173797895363, -0.6549782333099456, 5.779568185005202, -0.15659344278646095, -3.254141172699006, 0.09977611243895065]
b = 3.0254820263703692

def main():
    f = 0.0
    for i in range(55):
        d = 0.0
        for j in range(15):
            d += a[j] * P[i][j]
        d += b
        
        suma = 0.0
        for j in range(15):
            suma += a[j] * a[j]
            
        print("P", i, " :   ", d/math.sqrt(suma))
        f += d*d/suma
    print("sum", f)

#    ly = []
#    for i in range(55):
#        ly.append(P[i][0])
#    y = np.matrix(ly)
#    
#    for i in range(55):
#        P[i][0] = 1
#    a = np.matrix(P)
#    
#    b = np.linalg.pinv(a) * y.T
#    
#    print(b.tolist())
        
if __name__ == '__main__':
    main()